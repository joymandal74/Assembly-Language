EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
CaseConversionProgram.exe -- emu8086 assembler version: 4.08  
 
[ 11/18/2014  --  10:56:12 AMShuvo ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .model small
[   2]        :                                       .stack 100h
[   3]        :                                       .data
[   4]        :                                       cr equ 0dh
[   5]        :                                       nl equ 0ah
[   6]    0100: 45 6E 74 65 72 20 61 20 6C 6F 77 65   msg1 db 'Enter a lower case letter: $'
                72 20 63 61 73 65 20 6C 65 74 74 65 
                72 3A 20 24                         
[   7]    011C: 0D 0A 49 6E 20 75 70 70 65 72 20 63   msg2 db 0dh,0ah,'In upper case it is: '
                61 73 65 20 69 74 20 69 73 3A 20    
[   8]    0133: 00 24                                 char db ?,'$'
[   9]        :                                       .code
[  10]    0140:                                       main proc
[  11]    0140: B8 10 00                              mov ax,@data
[  12]    0143: 8E D8                                 mov ds,ax
[  13]    0145: BA 00 00                              lea dx,msg1
[  14]    0148: B4 09                                 mov ah,9
[  15]    014A: CD 21                                 int 21h
[  16]    014C: B4 01                                 mov ah,1
[  17]    014E: CD 21                                 int 21h
[  18]    0150: 2C 20                                 sub al,20h
[  19]    0152: A2 33 00                              mov char,al
[  20]    0155: BA 1C 00                              lea dx,msg2
[  21]    0158: B4 09                                 mov ah,9
[  22]    015A: CD 21                                 int 21h
[  23]        :                                       
[  24]        :                                       
[  25]        :                                       
[  26]        :                                       
[  27]        :                                       main endp
[  28]        :                                       end main
[  29]        :                                       
[  30]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 5C      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 3C      -   check sum (l.byte)
0013: 42      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 14      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 14      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
